- name: Check boot device
  block:
    - name: Check that the boot device is set
      fail:
        msg: "valid boot_device is not set: {{boot_device}}"
      when: boot_device not in ansible_facts['device_links']['ids'].values() | flatten

- name: Configuring grub package
  become: yes
  block:
    - name: Install grub package
      portage:
        package: sys-boot/grub
        state: present
    - name: Install /etc/default/grub
      template:
        backup: yes
        src: etc/default/grub
        dest: /etc/default/grub
        owner: root
        group: root
        mode: u=rw,g=r,o=r

- name: Mount boot and partition
  become: yes
  block:
    - name: Check /boot mount
      command: mount
      register: result
    - name: Mount /boot
      command: mount /boot
      when: "'on /boot type' not in result['stdout']"
    - name: Create the EFI directory
      file:
        path: /boot/efi
        state: directory
        owner: root
        group: root
    - name: Mount /boot/efi
      command: "mount '/dev/disk/by-id/{{efi_device}}' /boot/efi"
      when: "efi_device is defined and 'on /boot/efi' not in result['stdout']"

- set_fact:
    efi_file_loc: "/boot/{% if efi_device is defined %}efi/{% endif %}EFI/{% if efi_removable %}BOOT/BOOTX64.EFI{% else %}gentoo/grubx64.efi{% endif %}"
- set_fact:
    efi_directory: "/boot{% if efi_device is defined %}/efi{% endif %}"

- set_fact:
    grub_cmd: "grub-install --efi-directory={{efi_directory}}{% if efi_removable %} --removable{% endif %}"

- name: Check grub install
  block:
    - name: Get removable EFI file info
      stat:
        path: "{{efi_file_loc}}"
      register: efi_file
    - name: Get grub EFI file info
      stat:
        path: /boot/grub/x86_64-efi/grub.efi
      register: grub_file
    - name: Get font info
      stat:
        path: /boot/grub/fonts/unicode.pf2
      register: font_file
    - name: Install grub
      command: "{{grub_cmd}}"
      when: not font_file.stat.exists or not grub_file.stat.exists or not efi_file.stat.exists
