- name: Configure the bootloader to use GRUB
  become: yes
  block:
    - set_fact:
        has_efi_conf: false
    - set_fact:
        efi_file: '\EFI\BOOT\BOOTX64.EFI'
    - set_fact:
        efi_file: '\EFI\gentoo\grubx64.efi'
      when: emerge_kernel == 'gentoo-kernel'
    - set_fact:
        partition_number: "1"
    - set_fact:
        partition_number: "{{efi_device | regex_replace('^.*-part([0-9]*)', '\\1')}}"
      when: efi_device is defined
    - name: Get the boot partition UUID
      command: "lsblk /dev/disk/by-id/{% if efi_device is defined %}{{efi_device}}{% else %}{{boot_device}}-part{{partition_number}}{% endif %} -n -o PARTUUID"
      register: partition_uuid

    - name: Update Grub config
      command: grub-mkconfig -o /boot/grub/grub.cfg

    - name: Check bootloader status
      become: yes
      block:
        - name: Get efibootmgr configuration
          command: efibootmgr
          register: efibootmr_output
        - name: Check efibootmgr configuration
          set_fact:
            has_efi_conf: true
          when: "partition_uuid.stdout_lines[0] in item and 'File({{efi_file}})' in item"
          with_items: "{{efibootmr_output.stdout_lines}}"

    - name: Configure bootloader entry
      become: yes
      command: "efibootmgr -c -l '{{efi_file}}' -L 'ansible-grub' -d /dev/disk/by-partuuid/{{partition_uuid.stdout_lines[0]}} -p {{partition_number}}"
      when: not has_efi_conf
