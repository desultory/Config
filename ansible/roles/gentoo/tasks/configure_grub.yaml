- name: Check boot device
  block:
    - name: Check that the boot device is set
      fail:
        msg: "valid boot_device is not set: {{boot_device}}"
      when: boot_device not in ansible_facts['device_links']['ids'].values() | flatten

- name: Configuring grub package
  become: yes
  block:
    - name: Install grub package
      portage:
        package: sys-boot/grub
        state: present
    - name: Install /etc/default/grub
      template:
        backup: yes
        src: etc/default/grub
        dest: /etc/default/grub
        owner: root
        group: root
        mode: u=rw,g=r,o=r

- name: Mount /boot
  become: yes
  block:
    - name: Check /boot mount
      command: mount
      register: result
    - name: Mount /boot
      command: mount /boot
      when: "'on /boot type' not in result['stdout']"

- name: Check grub install
  block:
    - name: Get EFI file info
      stat:
        path: /boot/efi/EFI/BOOT/BOOTX64.EFI
      register: efi_file
    - name: Get grub EFI file info
      stat:
        path: /boot/grub/x86_64-efi/grub.efi
      register: grub_file
    - name: Get font info
      stat:
        path: /boot/grub/fonts/unicode.pf2
      register: font_file
    - name: Check grub
      set_fact:
        grub_installed: true
      when: font_file.stat.exists and grub_file.stat.exists and efi_file.stat.exists

- name: Installing grub bootloader
  become: yes
  block:
    - name: Create the EFI directory
      file:
        path: /boot/efi
        state: directory
        owner: root
        group: root
    - name: Install GRUB to the EFI partition
      command: grub-install --efi-directory=/boot/efi --removable
  when: grub_installed is defined and not grub_installed

- set_fact:
    has_efi_conf: false

- name: Check bootloader status
  become: yes
  block:
    - name: Get efibootmgr configuration
      command: efibootmgr
      register: efibootmr_output
    - name: Get the boot partition UUID
      command: "lsblk /dev/disk/by-id/{{boot_device}}-part1 -n -o PARTUUID"
      register: partition_uuid
    - name: Check efibootmgr configuration
      set_fact:
        has_efi_conf: true
      when: partition_uuid.stdout_lines[0] in item and 'File(\efi\EFI\BOOT\BOOTX64.EFI)' in item
      with_items: "{{efibootmr_output.stdout_lines}}"

- name: Configure bootloader entry
  become: yes
  command: "efibootmgr -c -l '\\efi\\EFI\\BOOT\\BOOTX64.EFI' -L 'ansible-grub' -d /dev/disk/by-partuuid/{{partition_uuid.stdout_lines[0]}}"
  when: not has_efi_conf
