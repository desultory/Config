# Obtains the git repo for kernel configuration tools

- name: Mount /boot
  become: yes
  block:
    - name: Check /boot mount
      command: mount
      register: result
    - name: Mount /boot
      command: mount /boot
      when: "'on /boot type' not in result['stdout']"

- name: Detect host features
  set_fact:
    kernel_features: "{{kernel_features + cust_kernel_features | union(auto_features | select) | unique}}"
  vars:
    auto_features:
      - "{{'host-amd' if 'AuthenticAMD' in ansible_facts['processor']}}"
      - "{{'host-H12SSL' if ansible_facts['board_name'] == 'H12SSL-C'}}"
      - "{{'storage-sata' if ansible_facts['devices'].values() | selectattr('host', 'contains', 'SATA controller')}}"
      - "{{'storage-nvme' if ansible_facts['devices'].values() | selectattr('host', 'contains', 'Non-Volatile memory controller')}}"
      - "{{'storage-scsi' if ansible_facts['devices'].values() | selectattr('host', 'contains', 'Serial Attached SCSI controller')}}"
      - "{{'storage-usb' if ansible_facts['devices'].values() | selectattr('host', 'contains', 'USB controller')}}"
      - "{{'virt-docker' if docker_configure}}"
      - "{{'selinux' if selinux_configure}}"
- name: Configure kernel sources
  become: yes
  block:
    - name: Deploying kernel configs
      template:
        src: "{{item}}.config"
        dest: "/usr/src/linux/{{item}}.config"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      loop: "{{kernel_features}}"
      vars:
        kernel_features: "{{kernel_features}}"
    - name: Merge kernel configs
      command:
      args:
        chdir: /usr/src/linux
        argv: "{{merge_cmd}}"
      vars:
        - merge_configs: "{{kernel_features | map('regex_replace', '$', '.config')}}"
        - hostname_arg: "CONFIG_DEFAULT_HOSTNAME=\"{{inventory_hostname}}\""
        - merge_cmd: "{{ ['./merge_config/merge_config.py', '-d', '-p', hostname_arg, '-p', 'CONFIG_LOCALVERSION=\"-ansible\"'] + merge_configs }}"

- name: Build kernel sources
  become: yes
  command: "make -j {{ansible_facts['processor_vcpus'] * 2}}"
  args:
    chdir: /usr/src/linux

- name: Install kernel modules
  become: yes
  command: make modules_install
  args:
    chdir: /usr/src/linux
- name: Install the kernel
  become: yes
  command: make install
  args:
    chdir: /usr/src/linux

- name: Update grub
  become: yes
  command: grub-mkconfig -o /boot/grub/grub.cfg
