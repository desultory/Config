# Obtains the git repo for kernel configuration tools

- name: Mount /boot
  become: yes
  block:
    - name: Check /boot mount
      command: mount
      register: result
    - name: Mount /boot
      command: mount /boot
      when: "'on /boot type' not in result['stdout']"

- name: Detect host features
  block:
    - name: Clean the kernel features list
      set_fact: # removes empty/redundant entries
        kernel_features: "{{kernel_features | select | unique}}"
    - name: Gather PCI information
      command: lspci
      register: lspci_result
    - name: Populate pci_detected_features
      set_fact: # adds pci detected features which do not already exist in the kernel_features list
        kernel_features: "{{kernel_features | union(pci_detected_features | select)}}"
      vars:
        pci_detected_features:
          - "{{'net-x520' if 'Intel Corporation 82599ES' in lspci_result['stdout']}}"
          - "{{'net-e1000e' if 'Intel Corporation 82574L' in lspci_result['stdout']}}"
          - "{{'net-mt7921k' if 'MT7921K' in lspci_result['stdout']}}"
          - "{{'storage-sata' if 'SATA controller:' in lspci_result['stdout']}}"
          - "{{'storage-nvme' if 'Non-Volatile memory controller:' in lspci_result['stdout']}}"
          - "{{'storage-scsi' if 'Serial Attached SCSI controller:' in lspci_result['stdout']}}"
          - "{{'storage-usb' if 'USB controller' in lspci_result['stdout']}}"
          - "{{'video-nvidia' if 'NVIDIA Corporation GT218' in lspci_result['stdout']}}"
        wireless_enabled: "{{true if 'MT7921K' in lspci_result['stdout']}}"
    - name: Gather USB information
      command: lsusb
      register: lsusb_result
      when: "'USB controller' in lspci_result['stdout']"
    - name: Populate usb_detected_features
      set_fact:
        kernel_features: "{{kernel_features | union(usb_detected_features | select)}}"
      vars:
        usb_detected_features:
          - "{{'net-mt7612u' if 'MediaTek Inc. MT7612U' in lsusb_result['stdout']}}"
    - name: Finalize kernel_features
      set_fact: # adds
        kernel_features: "{{kernel_features | union(late_kernel_features + cust_kernel_features | select )}}"

- name: Configure kernel sources
  become: yes
  block:
    - name: Deploying kernel configs
      template:
        src: "{{item}}.config"
        dest: "/usr/src/linux/{{item}}.config"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      loop: "{{kernel_features}}"
      vars:
        kernel_features: "{{kernel_features}}"
    - name: Defining the basic merge parameters
      set_fact:
        merge_flag: "-d"
    - name: Setting allnoconfig
      set_fact:
        merge_flag: "-n"
      when: kconfig_allnoconfig
    - name: Merge kernel configs
      command:
      args:
        chdir: /usr/src/linux
        argv: "{{merge_cmd}}"
      vars:
        - merge_configs: "{{kernel_features | map('regex_replace', '$', '.config')}}"
        - hostname_arg: "CONFIG_DEFAULT_HOSTNAME=\"{{inventory_hostname}}\""
        - merge_cmd: "{{['./merge_config/merge_config.py', merge_flag, '-p', hostname_arg, '-p', 'CONFIG_LOCALVERSION=\"-ansible\"', '-p', 'CONFIG_EXTRA_FIRMWARE=\"' + firmware_blobs + '\"'] + merge_configs}}"
